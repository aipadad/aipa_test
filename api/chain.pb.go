// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aipadad/aipa/api/chain.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SendTransactionResponse struct {
	Errcode uint32                          `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                          `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *SendTransactionResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *SendTransactionResponse) Reset()                    { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()               {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *SendTransactionResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *SendTransactionResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SendTransactionResponse) GetResult() *SendTransactionResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type SendTransactionResponse_Result struct {
	Trx     *Transaction `protobuf:"bytes,1,opt,name=trx" json:"trx"`
	TrxHash string       `protobuf:"bytes,2,opt,name=trx_hash,json=trxHash" json:"trx_hash"`
}

func (m *SendTransactionResponse_Result) Reset()         { *m = SendTransactionResponse_Result{} }
func (m *SendTransactionResponse_Result) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse_Result) ProtoMessage()    {}
func (*SendTransactionResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{0, 0}
}

func (m *SendTransactionResponse_Result) GetTrx() *Transaction {
	if m != nil {
		return m.Trx
	}
	return nil
}

func (m *SendTransactionResponse_Result) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

type GetTransactionRequest struct {
	TrxHash string `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash" json:"trx_hash"`
}

func (m *GetTransactionRequest) Reset()                    { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()               {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *GetTransactionRequest) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

type GetTransactionResponse struct {
	Errcode uint32       `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string       `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *Transaction `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetTransactionResponse) Reset()                    { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()               {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *GetTransactionResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetTransactionResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetTransactionResponse) GetResult() *Transaction {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetBlockRequest struct {
	BlockNum  uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum" json:"block_num"`
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash" json:"block_hash"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *GetBlockRequest) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *GetBlockRequest) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type GetBlockResponse struct {
	Errcode uint32                   `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                   `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *GetBlockResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *GetBlockResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetBlockResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetBlockResponse) GetResult() *GetBlockResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetBlockResponse_Result struct {
	PrevBlockHash    string         `protobuf:"bytes,1,opt,name=prev_block_hash,json=prevBlockHash" json:"prev_block_hash"`
	BlockNum         uint64         `protobuf:"varint,2,opt,name=block_num,json=blockNum" json:"block_num"`
	BlockHash        string         `protobuf:"bytes,3,opt,name=block_hash,json=blockHash" json:"block_hash"`
	CursorBlockLabel uint32         `protobuf:"varint,4,opt,name=cursor_block_label,json=cursorBlockLabel" json:"cursor_block_label"`
	BlockTime        uint64         `protobuf:"varint,5,opt,name=block_time,json=blockTime" json:"block_time"`
	TrxMerkleRoot    string         `protobuf:"bytes,6,opt,name=trx_merkle_root,json=trxMerkleRoot" json:"trx_merkle_root"`
	Delegate         string         `protobuf:"bytes,7,opt,name=delegate" json:"delegate"`
	DelegateSign     string         `protobuf:"bytes,8,opt,name=delegate_sign,json=delegateSign" json:"delegate_sign"`
	Trxs             []*Transaction `protobuf:"bytes,9,rep,name=trxs" json:"trxs"`
}

func (m *GetBlockResponse_Result) Reset()                    { *m = GetBlockResponse_Result{} }
func (m *GetBlockResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse_Result) ProtoMessage()               {}
func (*GetBlockResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 0} }

func (m *GetBlockResponse_Result) GetPrevBlockHash() string {
	if m != nil {
		return m.PrevBlockHash
	}
	return ""
}

func (m *GetBlockResponse_Result) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *GetBlockResponse_Result) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetBlockResponse_Result) GetCursorBlockLabel() uint32 {
	if m != nil {
		return m.CursorBlockLabel
	}
	return 0
}

func (m *GetBlockResponse_Result) GetBlockTime() uint64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *GetBlockResponse_Result) GetTrxMerkleRoot() string {
	if m != nil {
		return m.TrxMerkleRoot
	}
	return ""
}

func (m *GetBlockResponse_Result) GetDelegate() string {
	if m != nil {
		return m.Delegate
	}
	return ""
}

func (m *GetBlockResponse_Result) GetDelegateSign() string {
	if m != nil {
		return m.DelegateSign
	}
	return ""
}

func (m *GetBlockResponse_Result) GetTrxs() []*Transaction {
	if m != nil {
		return m.Trxs
	}
	return nil
}

type GetInfoRequest struct {
}

func (m *GetInfoRequest) Reset()                    { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()               {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

type GetInfoResponse struct {
	Errcode uint32                  `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                  `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *GetInfoResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetInfoResponse) Reset()                    { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()               {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *GetInfoResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetInfoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetInfoResponse) GetResult() *GetInfoResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetInfoResponse_Result struct {
	HeadBlockNum          uint64 `protobuf:"varint,1,opt,name=head_block_num,json=headBlockNum" json:"head_block_num"`
	HeadBlockHash         string `protobuf:"bytes,2,opt,name=head_block_hash,json=headBlockHash" json:"head_block_hash"`
	HeadBlockTime         uint64 `protobuf:"varint,3,opt,name=head_block_time,json=headBlockTime" json:"head_block_time"`
	HeadBlockDelegate     string `protobuf:"bytes,4,opt,name=head_block_delegate,json=headBlockDelegate" json:"head_block_delegate"`
	CursorLabel           uint32 `protobuf:"varint,5,opt,name=cursor_label,json=cursorLabel" json:"cursor_label"`
	LastConsensusBlockNum uint64 `protobuf:"varint,6,opt,name=last_consensus_block_num,json=lastConsensusBlockNum" json:"last_consensus_block_num"`
	ChainId               string `protobuf:"bytes,7,opt,name=chain_id,json=chainId" json:"chain_id"`
}

func (m *GetInfoResponse_Result) Reset()                    { *m = GetInfoResponse_Result{} }
func (m *GetInfoResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*GetInfoResponse_Result) ProtoMessage()               {}
func (*GetInfoResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6, 0} }

func (m *GetInfoResponse_Result) GetHeadBlockNum() uint64 {
	if m != nil {
		return m.HeadBlockNum
	}
	return 0
}

func (m *GetInfoResponse_Result) GetHeadBlockHash() string {
	if m != nil {
		return m.HeadBlockHash
	}
	return ""
}

func (m *GetInfoResponse_Result) GetHeadBlockTime() uint64 {
	if m != nil {
		return m.HeadBlockTime
	}
	return 0
}

func (m *GetInfoResponse_Result) GetHeadBlockDelegate() string {
	if m != nil {
		return m.HeadBlockDelegate
	}
	return ""
}

func (m *GetInfoResponse_Result) GetCursorLabel() uint32 {
	if m != nil {
		return m.CursorLabel
	}
	return 0
}

func (m *GetInfoResponse_Result) GetLastConsensusBlockNum() uint64 {
	if m != nil {
		return m.LastConsensusBlockNum
	}
	return 0
}

func (m *GetInfoResponse_Result) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

type GetAccountRequest struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *GetAccountRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

type GetAccountResponse struct {
	Errcode uint32                     `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                     `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *GetAccountResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetAccountResponse) Reset()                    { *m = GetAccountResponse{} }
func (m *GetAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAccountResponse) ProtoMessage()               {}
func (*GetAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *GetAccountResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetAccountResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetAccountResponse) GetResult() *GetAccountResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetAccountResponse_Result struct {
	AccountName   string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name"`
	Pubkey        string `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey"`
	Balance       string `protobuf:"bytes,3,opt,name=balance" json:"balance"`
	StakedBalance string `protobuf:"bytes,4,opt,name=staked_balance,json=stakedBalance" json:"staked_balance"`
}

func (m *GetAccountResponse_Result) Reset()                    { *m = GetAccountResponse_Result{} }
func (m *GetAccountResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*GetAccountResponse_Result) ProtoMessage()               {}
func (*GetAccountResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8, 0} }

func (m *GetAccountResponse_Result) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *GetAccountResponse_Result) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *GetAccountResponse_Result) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *GetAccountResponse_Result) GetStakedBalance() string {
	if m != nil {
		return m.StakedBalance
	}
	return ""
}

type GetKeyValueRequest struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
	Object   string `protobuf:"bytes,2,opt,name=object" json:"object"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key"`
}

func (m *GetKeyValueRequest) Reset()                    { *m = GetKeyValueRequest{} }
func (m *GetKeyValueRequest) String() string            { return proto.CompactTextString(m) }
func (*GetKeyValueRequest) ProtoMessage()               {}
func (*GetKeyValueRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *GetKeyValueRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *GetKeyValueRequest) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *GetKeyValueRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetKeyValueResponse struct {
	Errcode uint32                      `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                      `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *GetKeyValueResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetKeyValueResponse) Reset()                    { *m = GetKeyValueResponse{} }
func (m *GetKeyValueResponse) String() string            { return proto.CompactTextString(m) }
func (*GetKeyValueResponse) ProtoMessage()               {}
func (*GetKeyValueResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *GetKeyValueResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetKeyValueResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetKeyValueResponse) GetResult() *GetKeyValueResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetKeyValueResponse_Result struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
	Object   string `protobuf:"bytes,2,opt,name=object" json:"object"`
	Key      string `protobuf:"bytes,3,opt,name=key" json:"key"`
	Value    string `protobuf:"bytes,4,opt,name=value" json:"value"`
}

func (m *GetKeyValueResponse_Result) Reset()                    { *m = GetKeyValueResponse_Result{} }
func (m *GetKeyValueResponse_Result) String() string            { return proto.CompactTextString(m) }
func (*GetKeyValueResponse_Result) ProtoMessage()               {}
func (*GetKeyValueResponse_Result) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10, 0} }

func (m *GetKeyValueResponse_Result) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *GetKeyValueResponse_Result) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *GetKeyValueResponse_Result) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetKeyValueResponse_Result) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type GetAbiRequest struct {
	Contract string `protobuf:"bytes,1,opt,name=contract" json:"contract"`
}

func (m *GetAbiRequest) Reset()                    { *m = GetAbiRequest{} }
func (m *GetAbiRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAbiRequest) ProtoMessage()               {}
func (*GetAbiRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *GetAbiRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

type GetAbiResponse struct {
	Errcode uint32 `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  string `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetAbiResponse) Reset()                    { *m = GetAbiResponse{} }
func (m *GetAbiResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAbiResponse) ProtoMessage()               {}
func (*GetAbiResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *GetAbiResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetAbiResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetAbiResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type GetTransferCreditRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name"`
	Spender string `protobuf:"bytes,2,opt,name=spender" json:"spender"`
}

func (m *GetTransferCreditRequest) Reset()                    { *m = GetTransferCreditRequest{} }
func (m *GetTransferCreditRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTransferCreditRequest) ProtoMessage()               {}
func (*GetTransferCreditRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *GetTransferCreditRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetTransferCreditRequest) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

type GetTransferCreditResponse struct {
	Errcode uint32                            `protobuf:"varint,1,opt,name=errcode" json:"errcode"`
	Msg     string                            `protobuf:"bytes,2,opt,name=msg" json:"msg"`
	Result  *GetTransferCreditResponse_Result `protobuf:"bytes,3,opt,name=result" json:"result"`
}

func (m *GetTransferCreditResponse) Reset()                    { *m = GetTransferCreditResponse{} }
func (m *GetTransferCreditResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTransferCreditResponse) ProtoMessage()               {}
func (*GetTransferCreditResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *GetTransferCreditResponse) GetErrcode() uint32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *GetTransferCreditResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetTransferCreditResponse) GetResult() *GetTransferCreditResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetTransferCreditResponse_Result struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name"`
	Spender string `protobuf:"bytes,2,opt,name=spender" json:"spender"`
	Limit   string `protobuf:"bytes,3,opt,name=limit" json:"limit"`
}

func (m *GetTransferCreditResponse_Result) Reset()         { *m = GetTransferCreditResponse_Result{} }
func (m *GetTransferCreditResponse_Result) String() string { return proto.CompactTextString(m) }
func (*GetTransferCreditResponse_Result) ProtoMessage()    {}
func (*GetTransferCreditResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{14, 0}
}

func (m *GetTransferCreditResponse_Result) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetTransferCreditResponse_Result) GetSpender() string {
	if m != nil {
		return m.Spender
	}
	return ""
}

func (m *GetTransferCreditResponse_Result) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func init() {
	proto.RegisterType((*SendTransactionResponse)(nil), "api.SendTransactionResponse")
	proto.RegisterType((*SendTransactionResponse_Result)(nil), "api.SendTransactionResponse.Result")
	proto.RegisterType((*GetTransactionRequest)(nil), "api.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "api.GetTransactionResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "api.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "api.GetBlockResponse")
	proto.RegisterType((*GetBlockResponse_Result)(nil), "api.GetBlockResponse.Result")
	proto.RegisterType((*GetInfoRequest)(nil), "api.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "api.GetInfoResponse")
	proto.RegisterType((*GetInfoResponse_Result)(nil), "api.GetInfoResponse.Result")
	proto.RegisterType((*GetAccountRequest)(nil), "api.GetAccountRequest")
	proto.RegisterType((*GetAccountResponse)(nil), "api.GetAccountResponse")
	proto.RegisterType((*GetAccountResponse_Result)(nil), "api.GetAccountResponse.Result")
	proto.RegisterType((*GetKeyValueRequest)(nil), "api.GetKeyValueRequest")
	proto.RegisterType((*GetKeyValueResponse)(nil), "api.GetKeyValueResponse")
	proto.RegisterType((*GetKeyValueResponse_Result)(nil), "api.GetKeyValueResponse.Result")
	proto.RegisterType((*GetAbiRequest)(nil), "api.GetAbiRequest")
	proto.RegisterType((*GetAbiResponse)(nil), "api.GetAbiResponse")
	proto.RegisterType((*GetTransferCreditRequest)(nil), "api.GetTransferCreditRequest")
	proto.RegisterType((*GetTransferCreditResponse)(nil), "api.GetTransferCreditResponse")
	proto.RegisterType((*GetTransferCreditResponse_Result)(nil), "api.GetTransferCreditResponse.Result")
}

func init() { proto.RegisterFile("github.com/aipadad/aipa/api/chain.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0xdb, 0xc6,
	0x13, 0x17, 0x2d, 0x59, 0x92, 0x47, 0x96, 0xad, 0xac, 0xbf, 0x68, 0x39, 0xc9, 0xdf, 0x61, 0x1c,
	0xc3, 0xc0, 0xbf, 0x95, 0x0b, 0xa7, 0x70, 0x50, 0x14, 0x45, 0x51, 0xb9, 0x80, 0x12, 0xe4, 0xe3,
	0xa0, 0x18, 0x3d, 0xe4, 0x42, 0xac, 0xc8, 0x8d, 0xc4, 0x9a, 0xe4, 0xaa, 0xcb, 0x65, 0xa0, 0xdc,
	0xfb, 0x14, 0x45, 0xaf, 0x7d, 0x8e, 0x5e, 0x0b, 0xf4, 0xda, 0x07, 0xe8, 0x9b, 0xb4, 0xd8, 0x5d,
	0x2e, 0x45, 0xae, 0x65, 0xd7, 0x15, 0x7a, 0xe3, 0xcc, 0xce, 0xc7, 0x6f, 0xe6, 0x37, 0xbb, 0x43,
	0xf8, 0x6c, 0x1c, 0xf0, 0x49, 0x3a, 0xea, 0x79, 0x34, 0x3a, 0x1d, 0x51, 0xce, 0x69, 0xf2, 0xe9,
	0x94, 0xd1, 0xef, 0x89, 0xc7, 0x33, 0xf1, 0x14, 0x4f, 0x83, 0x53, 0x6f, 0x82, 0x83, 0xb8, 0x37,
	0x65, 0x94, 0x53, 0x54, 0xc5, 0xd3, 0xa0, 0x7b, 0x7e, 0x27, 0x37, 0xce, 0x70, 0x9c, 0x60, 0x8f,
	0x07, 0x34, 0x73, 0x76, 0x7e, 0xb7, 0x60, 0xef, 0x2d, 0x89, 0xfd, 0xcb, 0xf9, 0xc9, 0x90, 0x24,
	0x53, 0x1a, 0x27, 0x04, 0xd9, 0xd0, 0x20, 0x8c, 0x79, 0xd4, 0x27, 0xb6, 0x75, 0x68, 0x9d, 0xb4,
	0x87, 0x5a, 0x44, 0x1d, 0xa8, 0x46, 0xc9, 0xd8, 0x5e, 0x39, 0xb4, 0x4e, 0xd6, 0x86, 0xe2, 0x13,
	0x7d, 0x09, 0x75, 0x46, 0x92, 0x34, 0xe4, 0x76, 0xf5, 0xd0, 0x3a, 0x69, 0x9d, 0x3d, 0xee, 0xe1,
	0x69, 0xd0, 0xbb, 0x21, 0x72, 0x6f, 0x28, 0x4d, 0x87, 0x99, 0x4b, 0x77, 0x00, 0x75, 0xa5, 0x41,
	0x0e, 0x54, 0x39, 0x9b, 0xc9, 0x74, 0xad, 0xb3, 0x8e, 0x8c, 0x51, 0xf4, 0x17, 0x87, 0x68, 0x1f,
	0x9a, 0x9c, 0xcd, 0xdc, 0x09, 0x4e, 0x26, 0x19, 0x82, 0x06, 0x67, 0xb3, 0xe7, 0x38, 0x99, 0x38,
	0x67, 0xb0, 0x33, 0x20, 0xbc, 0x94, 0xf1, 0x87, 0x94, 0x24, 0xbc, 0xe4, 0x63, 0x95, 0x7d, 0x62,
	0xd8, 0x35, 0x7d, 0x96, 0xa8, 0xff, 0xc4, 0xa8, 0xff, 0x3a, 0xf6, 0xec, 0xdc, 0x79, 0x0d, 0x9b,
	0x03, 0xc2, 0xfb, 0x21, 0xf5, 0xae, 0x34, 0xba, 0x03, 0x58, 0x1b, 0x09, 0xd9, 0x8d, 0xd3, 0x48,
	0xa6, 0xaa, 0x0d, 0x9b, 0x52, 0xf1, 0x26, 0x8d, 0xd0, 0x03, 0x00, 0x75, 0x58, 0x28, 0x58, 0x99,
	0x4b, 0xf8, 0xbf, 0x56, 0xa1, 0x33, 0x8f, 0xb7, 0x04, 0xf2, 0xcf, 0x0d, 0xe4, 0xf7, 0x25, 0x72,
	0x33, 0xa4, 0x49, 0xd9, 0x6f, 0x2b, 0x39, 0x67, 0xc7, 0xb0, 0x39, 0x65, 0xe4, 0x83, 0x5b, 0x40,
	0xa9, 0x5a, 0xdc, 0x16, 0xea, 0xbe, 0x46, 0x5a, 0xae, 0x72, 0xe5, 0xd6, 0x2a, 0xab, 0x46, 0x95,
	0xe8, 0x13, 0x40, 0x5e, 0xca, 0x12, 0xca, 0xb2, 0x2c, 0x21, 0x1e, 0x91, 0xd0, 0xae, 0xc9, 0xda,
	0x3a, 0xea, 0x44, 0x26, 0x7a, 0x25, 0xf4, 0xf3, 0x60, 0x3c, 0x88, 0x88, 0xbd, 0x2a, 0x53, 0xa9,
	0x60, 0x97, 0x41, 0x44, 0x04, 0x60, 0x31, 0x0c, 0x11, 0x61, 0x57, 0x21, 0x71, 0x19, 0xa5, 0xdc,
	0xae, 0x2b, 0xc0, 0x9c, 0xcd, 0x5e, 0x4b, 0xed, 0x90, 0x52, 0x8e, 0xba, 0xd0, 0xf4, 0x49, 0x48,
	0xc6, 0x98, 0x13, 0xbb, 0x21, 0x0d, 0x72, 0x19, 0x3d, 0x86, 0xb6, 0xfe, 0x76, 0x93, 0x60, 0x1c,
	0xdb, 0x4d, 0x69, 0xb0, 0xae, 0x95, 0x6f, 0x83, 0x71, 0x8c, 0x8e, 0xa0, 0xc6, 0xd9, 0x2c, 0xb1,
	0xd7, 0x0e, 0xab, 0x0b, 0x47, 0x42, 0x9e, 0x3a, 0x1d, 0xd8, 0x18, 0x10, 0xfe, 0x22, 0x7e, 0x4f,
	0xb3, 0x79, 0x70, 0x7e, 0xaa, 0xca, 0x19, 0x51, 0xaa, 0x25, 0x28, 0x7d, 0x6a, 0x50, 0x7a, 0xa0,
	0x29, 0x2d, 0x46, 0x34, 0x19, 0xfd, 0x65, 0xce, 0xe8, 0x11, 0x6c, 0x4c, 0x08, 0xf6, 0x5d, 0x73,
	0x28, 0xd7, 0x85, 0xb6, 0xaf, 0x29, 0x3b, 0x86, 0xcd, 0x82, 0x55, 0x61, 0x3a, 0xdb, 0xb9, 0x99,
	0xe4, 0xae, 0x6c, 0x27, 0x29, 0xa9, 0xca, 0x70, 0x73, 0x3b, 0x49, 0x4b, 0x0f, 0xb6, 0x0a, 0x76,
	0x79, 0xe7, 0x6b, 0x32, 0xe6, 0xbd, 0xdc, 0xf6, 0x5b, 0x4d, 0xc1, 0x23, 0x58, 0xcf, 0x66, 0x42,
	0x4d, 0xc3, 0xaa, 0x6c, 0x4b, 0x4b, 0xe9, 0xd4, 0x20, 0x3c, 0x03, 0x3b, 0xc4, 0x09, 0x77, 0x3d,
	0x51, 0x70, 0x9c, 0xa4, 0x49, 0xa1, 0xa4, 0xba, 0xc4, 0xb0, 0x23, 0xce, 0x2f, 0xf4, 0x71, 0x5e,
	0xdb, 0x3e, 0x34, 0xe5, 0x13, 0xeb, 0x06, 0x7e, 0x46, 0x7d, 0x43, 0xca, 0x2f, 0x7c, 0xe7, 0x1c,
	0xee, 0x0d, 0x08, 0xff, 0xc6, 0xf3, 0x68, 0x1a, 0x73, 0x7d, 0x83, 0x1f, 0xc1, 0x3a, 0x56, 0x1a,
	0x37, 0xc6, 0x11, 0xc9, 0x2e, 0x40, 0x2b, 0xd3, 0xbd, 0xc1, 0x11, 0x71, 0xfe, 0xb2, 0x00, 0x15,
	0x1d, 0x97, 0xe0, 0xf5, 0xdc, 0xe0, 0xf5, 0xa1, 0xe6, 0xd5, 0x08, 0x6a, 0x52, 0xfb, 0xa3, 0x95,
	0x53, 0xfb, 0xcf, 0x40, 0xd1, 0x2e, 0xd4, 0xa7, 0xe9, 0xe8, 0x8a, 0x7c, 0xcc, 0x52, 0x67, 0x92,
	0x40, 0x3a, 0xc2, 0x21, 0x8e, 0x3d, 0x92, 0xdd, 0x4f, 0x2d, 0xa2, 0x27, 0xb0, 0x91, 0x70, 0x7c,
	0x45, 0x7c, 0x57, 0x1b, 0x28, 0xd2, 0xda, 0x4a, 0xdb, 0x57, 0x4a, 0xe7, 0x9d, 0x6c, 0xc0, 0x4b,
	0xf2, 0xf1, 0x3b, 0x1c, 0xa6, 0x44, 0xb7, 0xae, 0x0b, 0x4d, 0x8f, 0xc6, 0x9c, 0x61, 0x8f, 0x67,
	0x68, 0x72, 0x59, 0x40, 0xa1, 0x23, 0xb1, 0xc4, 0x34, 0x14, 0x25, 0x89, 0xd6, 0x08, 0x7c, 0x0a,
	0x86, 0xf8, 0x74, 0xfe, 0xb4, 0x60, 0xab, 0x14, 0x7c, 0x89, 0xf6, 0x3e, 0x33, 0xda, 0xfb, 0x3f,
	0xdd, 0x5e, 0x33, 0xaa, 0xd9, 0x5f, 0x3f, 0x6f, 0xef, 0x7f, 0x52, 0x0c, 0xda, 0x86, 0xd5, 0x0f,
	0x22, 0x5f, 0xd6, 0x46, 0x25, 0x38, 0xff, 0x87, 0xb6, 0xa0, 0x7a, 0x14, 0xdc, 0xa1, 0x73, 0xce,
	0xa5, 0x7c, 0x54, 0xa4, 0xf1, 0x12, 0x9d, 0xd8, 0x2d, 0x75, 0x62, 0x2d, 0xdf, 0x5d, 0xcf, 0xc1,
	0xd6, 0xbb, 0xf2, 0x3d, 0x61, 0x17, 0x8c, 0xf8, 0x41, 0x7e, 0x05, 0x10, 0xd4, 0x0a, 0x13, 0x25,
	0xbf, 0x45, 0xce, 0x64, 0x4a, 0x62, 0x9f, 0x30, 0xbd, 0xa9, 0x33, 0xd1, 0xf9, 0xc3, 0x82, 0xfd,
	0x05, 0xa1, 0x96, 0xc0, 0xfa, 0x95, 0xc1, 0xda, 0x13, 0xcd, 0xda, 0xe2, 0xd8, 0x26, 0x77, 0xaf,
	0x72, 0xee, 0xfe, 0x55, 0x01, 0x82, 0xa3, 0x30, 0x88, 0x02, 0xdd, 0x21, 0x25, 0x9c, 0xfd, 0x5c,
	0x83, 0xd5, 0x0b, 0xf1, 0x50, 0xa0, 0x0b, 0xd8, 0x34, 0xfe, 0x7e, 0xd0, 0xb5, 0x05, 0xd0, 0xbd,
	0x7f, 0xdb, 0x5f, 0x92, 0x53, 0x41, 0x2f, 0x25, 0x8b, 0xc5, 0x18, 0xdd, 0x52, 0x75, 0xa5, 0x9f,
	0x9c, 0xee, 0xc1, 0xc2, 0xb3, 0x3c, 0xd8, 0x17, 0xd0, 0xd4, 0x5b, 0x1d, 0x6d, 0x1b, 0x4b, 0x5e,
	0x05, 0xd8, 0x59, 0xb8, 0xfa, 0x9d, 0x0a, 0x3a, 0x87, 0x46, 0xb6, 0x3d, 0xd0, 0x56, 0x79, 0x97,
	0x28, 0xc7, 0xed, 0x45, 0x0b, 0xc6, 0xa9, 0xa0, 0xaf, 0x01, 0xe6, 0xaf, 0x13, 0xda, 0xbd, 0xf6,
	0x5c, 0x29, 0xef, 0xbd, 0x1b, 0x9e, 0x31, 0xa7, 0x82, 0xfa, 0xd0, 0x2a, 0xdc, 0x3f, 0xb4, 0x77,
	0xfd, 0x46, 0xaa, 0x10, 0xf6, 0x4d, 0x57, 0xd5, 0xa9, 0x88, 0x6d, 0xa8, 0xae, 0x02, 0x42, 0x79,
	0xa2, 0xfc, 0x12, 0x75, 0xb7, 0x4a, 0xba, 0xdc, 0xe9, 0x52, 0xbe, 0xf2, 0xe5, 0x11, 0x42, 0x0f,
	0x6e, 0x1a, 0x2d, 0x15, 0xea, 0xe1, 0xed, 0x93, 0xe7, 0x54, 0xfa, 0xc7, 0xef, 0x8e, 0xee, 0xf2,
	0x9f, 0x3e, 0xaa, 0xcb, 0x9f, 0xf3, 0xa7, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xa2, 0x6e,
	0x0f, 0x0d, 0x0c, 0x00, 0x00,
}
